//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AquardensUnitTest.wsAccesso {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcUser", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellulareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodiceFiscaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DataNascitaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cellulare {
            get {
                return this.CellulareField;
            }
            set {
                if ((object.ReferenceEquals(this.CellulareField, value) != true)) {
                    this.CellulareField = value;
                    this.RaisePropertyChanged("Cellulare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodiceFiscale {
            get {
                return this.CodiceFiscaleField;
            }
            set {
                if ((object.ReferenceEquals(this.CodiceFiscaleField, value) != true)) {
                    this.CodiceFiscaleField = value;
                    this.RaisePropertyChanged("CodiceFiscale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DataNascita {
            get {
                return this.DataNascitaField;
            }
            set {
                if ((this.DataNascitaField.Equals(value) != true)) {
                    this.DataNascitaField = value;
                    this.RaisePropertyChanged("DataNascita");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcClientInfo", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device {
            get {
                return this.DeviceField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceField, value) != true)) {
                    this.DeviceField = value;
                    this.RaisePropertyChanged("Device");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsName {
            get {
                return this.OsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OsNameField, value) != true)) {
                    this.OsNameField = value;
                    this.RaisePropertyChanged("OsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsVersion {
            get {
                return this.OsVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OsVersionField, value) != true)) {
                    this.OsVersionField = value;
                    this.RaisePropertyChanged("OsVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcEsito", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AquardensUnitTest.wsAccesso.dcImpiantiEsito))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AquardensUnitTest.wsAccesso.dcDispositiviEsito))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AquardensUnitTest.wsAccesso.dcPrivacyInfoEsito))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AquardensUnitTest.wsAccesso.dcUserEsito))]
    public partial class dcEsito : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EsitoCodiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EsitoDescrizField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EsitoNotaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EsitoCodice {
            get {
                return this.EsitoCodiceField;
            }
            set {
                if ((this.EsitoCodiceField.Equals(value) != true)) {
                    this.EsitoCodiceField = value;
                    this.RaisePropertyChanged("EsitoCodice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EsitoDescriz {
            get {
                return this.EsitoDescrizField;
            }
            set {
                if ((object.ReferenceEquals(this.EsitoDescrizField, value) != true)) {
                    this.EsitoDescrizField = value;
                    this.RaisePropertyChanged("EsitoDescriz");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EsitoNota {
            get {
                return this.EsitoNotaField;
            }
            set {
                if ((object.ReferenceEquals(this.EsitoNotaField, value) != true)) {
                    this.EsitoNotaField = value;
                    this.RaisePropertyChanged("EsitoNota");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcImpiantiEsito", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcImpiantiEsito : AquardensUnitTest.wsAccesso.dcEsito {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AquardensUnitTest.wsAccesso.InfoBox[] ElencoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AquardensUnitTest.wsAccesso.InfoBox[] Elenco {
            get {
                return this.ElencoField;
            }
            set {
                if ((object.ReferenceEquals(this.ElencoField, value) != true)) {
                    this.ElencoField = value;
                    this.RaisePropertyChanged("Elenco");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcDispositiviEsito", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcDispositiviEsito : AquardensUnitTest.wsAccesso.dcEsito {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AquardensUnitTest.wsAccesso.InfoBox[] DispositiviField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AquardensUnitTest.wsAccesso.InfoBox[] Dispositivi {
            get {
                return this.DispositiviField;
            }
            set {
                if ((object.ReferenceEquals(this.DispositiviField, value) != true)) {
                    this.DispositiviField = value;
                    this.RaisePropertyChanged("Dispositivi");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcPrivacyInfoEsito", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcPrivacyInfoEsito : AquardensUnitTest.wsAccesso.dcEsito {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlDataTreatmentAuthorizationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlDataTreatmentAuthorization {
            get {
                return this.UrlDataTreatmentAuthorizationField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlDataTreatmentAuthorizationField, value) != true)) {
                    this.UrlDataTreatmentAuthorizationField = value;
                    this.RaisePropertyChanged("UrlDataTreatmentAuthorization");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcUserEsito", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcUserEsito : AquardensUnitTest.wsAccesso.dcEsito {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DaConfermareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] EnabledProceduresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AquardensUnitTest.wsAccesso.dcProcedure[] EnabledProceduresNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SkinDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UtenzaTipoPagamentoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DaConfermare {
            get {
                return this.DaConfermareField;
            }
            set {
                if ((this.DaConfermareField.Equals(value) != true)) {
                    this.DaConfermareField = value;
                    this.RaisePropertyChanged("DaConfermare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] EnabledProcedures {
            get {
                return this.EnabledProceduresField;
            }
            set {
                if ((object.ReferenceEquals(this.EnabledProceduresField, value) != true)) {
                    this.EnabledProceduresField = value;
                    this.RaisePropertyChanged("EnabledProcedures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AquardensUnitTest.wsAccesso.dcProcedure[] EnabledProceduresNew {
            get {
                return this.EnabledProceduresNewField;
            }
            set {
                if ((object.ReferenceEquals(this.EnabledProceduresNewField, value) != true)) {
                    this.EnabledProceduresNewField = value;
                    this.RaisePropertyChanged("EnabledProceduresNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SkinData {
            get {
                return this.SkinDataField;
            }
            set {
                if ((this.SkinDataField.Equals(value) != true)) {
                    this.SkinDataField = value;
                    this.RaisePropertyChanged("SkinData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UtenzaTipoPagamento {
            get {
                return this.UtenzaTipoPagamentoField;
            }
            set {
                if ((this.UtenzaTipoPagamentoField.Equals(value) != true)) {
                    this.UtenzaTipoPagamentoField = value;
                    this.RaisePropertyChanged("UtenzaTipoPagamento");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcProcedure", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcProcedure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcedureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((this.ProcedureField.Equals(value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoBox", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class InfoBox : AquardensUnitTest.wsAccesso.IdBox {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescrizioneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descrizione {
            get {
                return this.DescrizioneField;
            }
            set {
                if ((object.ReferenceEquals(this.DescrizioneField, value) != true)) {
                    this.DescrizioneField = value;
                    this.RaisePropertyChanged("Descrizione");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdBox", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AquardensUnitTest.wsAccesso.InfoBox))]
    public partial class IdBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdEsternoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdEsterno {
            get {
                return this.IdEsternoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdEsternoField, value) != true)) {
                    this.IdEsternoField = value;
                    this.RaisePropertyChanged("IdEsterno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcBaseRequest", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcBaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImpiantoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AquardensUnitTest.wsAccesso.dcBaseLanguage LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Impianto {
            get {
                return this.ImpiantoField;
            }
            set {
                if ((object.ReferenceEquals(this.ImpiantoField, value) != true)) {
                    this.ImpiantoField = value;
                    this.RaisePropertyChanged("Impianto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AquardensUnitTest.wsAccesso.dcBaseLanguage Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcBaseLanguage", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcBaseLanguage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IetfLanguageTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwoLetterISOLanguageNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IetfLanguageTag {
            get {
                return this.IetfLanguageTagField;
            }
            set {
                if ((object.ReferenceEquals(this.IetfLanguageTagField, value) != true)) {
                    this.IetfLanguageTagField = value;
                    this.RaisePropertyChanged("IetfLanguageTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwoLetterISOLanguageName {
            get {
                return this.TwoLetterISOLanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TwoLetterISOLanguageNameField, value) != true)) {
                    this.TwoLetterISOLanguageNameField = value;
                    this.RaisePropertyChanged("TwoLetterISOLanguageName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcConfirmRequest", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcConfirmRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dcPasswordRequest", Namespace="http://zitaca.com/gridservices")]
    [System.SerializableAttribute()]
    public partial class dcPasswordRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://zitaca.com/gridservices/001", ConfigurationName="wsAccesso.iAccess_001")]
    public interface iAccess_001 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Login", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/LoginResponse")]
        AquardensUnitTest.wsAccesso.dcUserEsito Login(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Login", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/LoginResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> LoginAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Logout", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/LogoutResponse")]
        AquardensUnitTest.wsAccesso.dcEsito Logout(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Logout", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/LogoutResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> LogoutAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Register", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RegisterResponse")]
        AquardensUnitTest.wsAccesso.dcUserEsito Register(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/Register", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RegisterResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> RegisterAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/ChangePassword", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/ChangePasswordResponse")]
        AquardensUnitTest.wsAccesso.dcEsito ChangePassword(AquardensUnitTest.wsAccesso.dcBaseRequest @base, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/ChangePassword", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/ChangePasswordResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ChangePasswordAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetImpianti", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetImpiantiResponse")]
        AquardensUnitTest.wsAccesso.dcImpiantiEsito GetImpianti(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetImpianti", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetImpiantiResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcImpiantiEsito> GetImpiantiAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetDispositivi", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetDispositiviResponse")]
        AquardensUnitTest.wsAccesso.dcDispositiviEsito GetDispositivi(AquardensUnitTest.wsAccesso.dcBaseRequest @base, System.Nullable<int> tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetDispositivi", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetDispositiviResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcDispositiviEsito> GetDispositiviAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, System.Nullable<int> tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetPrivacyInfo", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetPrivacyInfoResponse")]
        AquardensUnitTest.wsAccesso.dcPrivacyInfoEsito GetPrivacyInfo(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/GetPrivacyInfo", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/GetPrivacyInfoResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcPrivacyInfoEsito> GetPrivacyInfoAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/ConfirmRegister", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/ConfirmRegisterResponse")]
        AquardensUnitTest.wsAccesso.dcEsito ConfirmRegister(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/ConfirmRegister", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/ConfirmRegisterResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ConfirmRegisterAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/RecoveryConfirmCode", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RecoveryConfirmCodeResponse")]
        AquardensUnitTest.wsAccesso.dcEsito RecoveryConfirmCode(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/RecoveryConfirmCode", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RecoveryConfirmCodeResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> RecoveryConfirmCodeAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/RecoveryPassword", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RecoveryPasswordResponse")]
        AquardensUnitTest.wsAccesso.dcEsito RecoveryPassword(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/001/iAccess_001/RecoveryPassword", ReplyAction="http://zitaca.com/gridservices/001/iAccess_001/RecoveryPasswordResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> RecoveryPasswordAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcPasswordRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iAccess_001Channel : AquardensUnitTest.wsAccesso.iAccess_001, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iAccess_001Client : System.ServiceModel.ClientBase<AquardensUnitTest.wsAccesso.iAccess_001>, AquardensUnitTest.wsAccesso.iAccess_001 {
        
        public iAccess_001Client() {
        }
        
        public iAccess_001Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iAccess_001Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iAccess_001Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iAccess_001Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AquardensUnitTest.wsAccesso.dcUserEsito Login(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.Login(@base, user, info);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> LoginAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.LoginAsync(@base, user, info);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito Logout(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.Logout(@base);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> LogoutAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.LogoutAsync(@base);
        }
        
        public AquardensUnitTest.wsAccesso.dcUserEsito Register(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.Register(@base, user, info);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> RegisterAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.RegisterAsync(@base, user, info);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito ChangePassword(AquardensUnitTest.wsAccesso.dcBaseRequest @base, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(@base, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ChangePasswordAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(@base, oldPassword, newPassword);
        }
        
        public AquardensUnitTest.wsAccesso.dcImpiantiEsito GetImpianti(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.GetImpianti(@base);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcImpiantiEsito> GetImpiantiAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.GetImpiantiAsync(@base);
        }
        
        public AquardensUnitTest.wsAccesso.dcDispositiviEsito GetDispositivi(AquardensUnitTest.wsAccesso.dcBaseRequest @base, System.Nullable<int> tipo) {
            return base.Channel.GetDispositivi(@base, tipo);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcDispositiviEsito> GetDispositiviAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, System.Nullable<int> tipo) {
            return base.Channel.GetDispositiviAsync(@base, tipo);
        }
        
        public AquardensUnitTest.wsAccesso.dcPrivacyInfoEsito GetPrivacyInfo(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.GetPrivacyInfo(@base);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcPrivacyInfoEsito> GetPrivacyInfoAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base) {
            return base.Channel.GetPrivacyInfoAsync(@base);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito ConfirmRegister(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request) {
            return base.Channel.ConfirmRegister(@base, request);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ConfirmRegisterAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request) {
            return base.Channel.ConfirmRegisterAsync(@base, request);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito RecoveryConfirmCode(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request) {
            return base.Channel.RecoveryConfirmCode(@base, request);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> RecoveryConfirmCodeAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcConfirmRequest request) {
            return base.Channel.RecoveryConfirmCodeAsync(@base, request);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito RecoveryPassword(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcPasswordRequest request) {
            return base.Channel.RecoveryPassword(@base, request);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> RecoveryPasswordAsync(AquardensUnitTest.wsAccesso.dcBaseRequest @base, AquardensUnitTest.wsAccesso.dcPasswordRequest request) {
            return base.Channel.RecoveryPasswordAsync(@base, request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://zitaca.com/gridservices", ConfigurationName="wsAccesso.iAccess")]
    public interface iAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Login", ReplyAction="http://zitaca.com/gridservices/iAccess/LoginResponse")]
        AquardensUnitTest.wsAccesso.dcUserEsito Login(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Login", ReplyAction="http://zitaca.com/gridservices/iAccess/LoginResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> LoginAsync(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Logout", ReplyAction="http://zitaca.com/gridservices/iAccess/LogoutResponse")]
        AquardensUnitTest.wsAccesso.dcEsito Logout(string sessionId, string impianto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Logout", ReplyAction="http://zitaca.com/gridservices/iAccess/LogoutResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> LogoutAsync(string sessionId, string impianto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Register", ReplyAction="http://zitaca.com/gridservices/iAccess/RegisterResponse")]
        AquardensUnitTest.wsAccesso.dcUserEsito Register(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/Register", ReplyAction="http://zitaca.com/gridservices/iAccess/RegisterResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> RegisterAsync(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/ChangePassword", ReplyAction="http://zitaca.com/gridservices/iAccess/ChangePasswordResponse")]
        AquardensUnitTest.wsAccesso.dcEsito ChangePassword(string sessionId, string impianto, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/ChangePassword", ReplyAction="http://zitaca.com/gridservices/iAccess/ChangePasswordResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ChangePasswordAsync(string sessionId, string impianto, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/GetImpianti", ReplyAction="http://zitaca.com/gridservices/iAccess/GetImpiantiResponse")]
        AquardensUnitTest.wsAccesso.dcImpiantiEsito GetImpianti(string impianto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://zitaca.com/gridservices/iAccess/GetImpianti", ReplyAction="http://zitaca.com/gridservices/iAccess/GetImpiantiResponse")]
        System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcImpiantiEsito> GetImpiantiAsync(string impianto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface iAccessChannel : AquardensUnitTest.wsAccesso.iAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class iAccessClient : System.ServiceModel.ClientBase<AquardensUnitTest.wsAccesso.iAccess>, AquardensUnitTest.wsAccesso.iAccess {
        
        public iAccessClient() {
        }
        
        public iAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AquardensUnitTest.wsAccesso.dcUserEsito Login(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.Login(impianto, user, info);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> LoginAsync(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.LoginAsync(impianto, user, info);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito Logout(string sessionId, string impianto) {
            return base.Channel.Logout(sessionId, impianto);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> LogoutAsync(string sessionId, string impianto) {
            return base.Channel.LogoutAsync(sessionId, impianto);
        }
        
        public AquardensUnitTest.wsAccesso.dcUserEsito Register(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.Register(impianto, user, info);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcUserEsito> RegisterAsync(string impianto, AquardensUnitTest.wsAccesso.dcUser user, AquardensUnitTest.wsAccesso.dcClientInfo info) {
            return base.Channel.RegisterAsync(impianto, user, info);
        }
        
        public AquardensUnitTest.wsAccesso.dcEsito ChangePassword(string sessionId, string impianto, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(sessionId, impianto, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcEsito> ChangePasswordAsync(string sessionId, string impianto, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(sessionId, impianto, oldPassword, newPassword);
        }
        
        public AquardensUnitTest.wsAccesso.dcImpiantiEsito GetImpianti(string impianto) {
            return base.Channel.GetImpianti(impianto);
        }
        
        public System.Threading.Tasks.Task<AquardensUnitTest.wsAccesso.dcImpiantiEsito> GetImpiantiAsync(string impianto) {
            return base.Channel.GetImpiantiAsync(impianto);
        }
    }
}
